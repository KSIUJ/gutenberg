services:
  # TODO: Allow password and optionally db and username configuration.
  db:
    image: postgres:15
    container_name: gutenberg-db
    environment:
      POSTGRES_DB: gutenbergdb
      POSTGRES_USER: gutenberguser
      POSTGRES_PASSWORD: gutenbergpass
    volumes:
      - gutenberg_postgres_data:/var/lib/postgresql/data
    restart: always

  # TODO: Add a password for an extra security.
  redis:
    image: redis:7
    container_name: gutenberg-redis
    restart: always

  # TODO: Add a custom config which limits which ports and hosts CUPS can be accessed from.
  #       Use either a custom target or a mount.
  # TODO: Enable some authentication mechanism to prevent unauthorized access.
  #       CUPS can currently be accessed from any host and with the default username and password.
  # TODO: Proxy the CUPS admin panel via Nginx.
  #       Other routes, like the CUPS IPP endpoint, probably should not be proxied.
  cups:
    image: olbat/cupsd:stable-2025-08-18
    container_name: gutenberg-cups
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: run_backend
    container_name: gutenberg-backend
    volumes:
      - gutenberg_backend_logs:/var/log/gutenberg
      - gutenberg_backend_data:/var/lib/gutenberg
      - type: bind
        source: ./backend/gutenberg/settings/docker_settings.py
        target: /etc/gutenberg/docker_settings.py
        read_only: true
    depends_on:
      - db
      - redis
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: run_celery
    container_name: gutenberg-celery
    depends_on:
      - redis
      - db
      - cups
    volumes:
      - gutenberg_backend_logs:/var/log/gutenberg
      - gutenberg_backend_data:/var/lib/gutenberg
      - type: bind
        source: ./backend/gutenberg/settings/docker_settings.py
        target: /etc/gutenberg/docker_settings.py
        read_only: true
    restart: always

    # The cap_add SYS_ADMIN and privileged settings allow bubblewrap to run inside the container.
    # The security implications of these changes have not been properly reviewed.
    # FIXME: These settings should probably me more restrictive.
    #
    # Some relevant links:
    # - https://docs.docker.com/engine/security/apparmor/
    # - https://docs.docker.com/engine/security/seccomp/
    cap_add:
      - SYS_ADMIN
    privileged: true

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
#      target: run_nginx
      target: run_nginx_test
    container_name: gutenberg-proxy
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: always

volumes:
  gutenberg_postgres_data:
  gutenberg_backend_logs:
  gutenberg_backend_data:
