services:
  # TODO: Allow password and optionally db and username configuration.
  db:
    image: postgres:15
    container_name: gutenberg-db
    environment:
      POSTGRES_DB: gutenbergdb
      POSTGRES_USER: gutenberguser
      POSTGRES_PASSWORD: gutenbergpass
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # TODO: Add a password for an extra security.
  redis:
    image: redis:7
    container_name: gutenberg-redis

  # TODO: Add a custom config which limits which ports and hosts CUPS can be accessed from.
  #       Use either a custom target or a mount.
  # TODO: Enable some authentication mechanism to prevent unauthorized access.
  # TODO: Proxy the CUPS admin panel via Nginx.
  #       Other routes, like the CUPS IPP endpoint, probably should not be proxied.
  cups:
    image: olbat/cupsd:stable-2025-08-18
    container_name: gutenberg-cups

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: run_backend
    container_name: gutenberg-backend
    volumes:
      - backend_logs:/var/log/gutenberg
      - type: bind
        source: ./backend/gutenberg/settings/docker_settings.py
        target: /etc/gutenberg/docker_settings.py
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: run_celery
    container_name: gutenberg-celery
    depends_on:
      - redis
      - db
      - cups
    volumes:
      - backend_logs:/var/log/gutenberg
      - type: bind
        source: ./backend/gutenberg/settings/docker_settings.py
        target: /etc/gutenberg/docker_settings.py

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
      target: run_nginx
    container_name: gutenberg-proxy
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  backend_logs:
